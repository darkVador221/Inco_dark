import moment from 'moment-timezone';
import fs from 'fs';
import os from 'os';
import pkg from '@whiskeysockets/baileys';
const { generateWAMessageFromContent, proto } = pkg;
import config from '../config.cjs';
import axios from 'axios';

// Get total memory and free memory in bytes
const totalMemoryBytes = os.totalmem();
const freeMemoryBytes = os.freemem();

// Define unit conversions
const byteToKB = 1 / 1024;
const byteToMB = byteToKB / 1024;
const byteToGB = byteToMB / 1024;

// Function to format bytes to a human-readable format
function formatBytes(bytes) {
  if (bytes >= Math.pow(1024, 3)) {
    return (bytes * byteToGB).toFixed(2) + ' GB';
  } else if (bytes >= Math.pow(1024, 2)) {
    return (bytes * byteToMB).toFixed(2) + ' MB';
  } else if (bytes >= 1024) {
    return (bytes * byteToKB).toFixed(2) + ' KB';
  } else {
    return bytes.toFixed(2) + ' bytes';
  }
}

// Bot Process Time
const uptime = process.uptime();
const day = Math.floor(uptime / (24 * 3600)); // Calculate days
const hours = Math.floor((uptime % (24 * 3600)) / 3600); // Calculate hours
const minutes = Math.floor((uptime % 3600) / 60); // Calculate minutes
const seconds = Math.floor(uptime % 60); // Calculate seconds

// Uptime
const uptimeMessage = `*I am alive now since ${day}d ${hours}h ${minutes}m ${seconds}s*`;
const runMessage = `*‚òÄÔ∏è ${day} Day*\n*üïê ${hours} Hour*\n*‚è∞ ${minutes} Minutes*\n*‚è±Ô∏è ${seconds} Seconds*\n`;

const xtime = moment.tz("Africa/Nairobi").format("HH:mm:ss");
const xdate = moment.tz("Africa/Nairobi").format("DD/MM/YYYY");
const time2 = moment().tz("Africa/Nairobi").format("HH:mm:ss");
let pushwish = "";

if (time2 < "05:00:00") {
  pushwish = `Good Morning üåÑ`;
} else if (time2 < "11:00:00") {
  pushwish = `Good Morning üåÑ`;
} else if (time2 < "15:00:00") {
  pushwish = `Good Afternoon üåÖ`;
} else if (time2 < "18:00:00") {
  pushwish = `Good Evening üåÉ`;
} else if (time2 < "19:00:00") {
  pushwish = `Good Evening üåÉ`;
} else {
  pushwish = `Good Night üåå`;
}

const menu = async (m, Matrix) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(' ')[0].toLowerCase() : '';
  const mode = config.MODE === 'public' ? 'public' : 'private';
  const pref = config.PREFIX;

  const validCommands = ['fullmenu', 'menu2', 'listcmd'];

  if (validCommands.includes(cmd)) {
    const str = `
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò *${config.OWNER_NAME}* „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüîÆ ‚û∫ ùôäùôíùôâùôÄùôç : ${config.OWNER_NAME}
‚ïëüëæ ‚û∫ ùôêùôéùôÄùôç : ${m.pushName}
‚ïëüí† ‚û∫ ùòΩùòºùôÑùôáùôÄùôîùôé : ùôàùôêùôáùôèùôÑ-ùòøùôÄùôëùôÑùòæùôÄ
‚ïëüåê ‚û∫ ùôèùôîùôãùôÄ : ùôâùôäùòøùôÄ.ùôÖùôé
‚ïëüõ°Ô∏è ‚û∫ ùôàùôäùòøùôÄ : *${mode}*
‚ïëüñ•Ô∏è ‚û∫ ùôãùôáùòºùôèùôÅùôäùôçùôà : ${os.platform()}
‚ïëüîë ‚û∫ ùôãùôçùôÄùôÅùôÑùôì : [ ${prefix} ]
‚ïëüöÄ ‚û∫ ùôëùôÄùôçùôéùôÑùôäùôâ : ùüØ.ùü≠.ùü¨
‚ïëüõ†Ô∏è ‚û∫ ùòøùôÄùôë : ùòøùòºùôçùôÜ_ùôÇùòºùôàùôÄùôç
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

> ${pushwish} *${m.pushName}*!

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùòøùôäùôíùôâùôáùôäùòºùòø ùôàùôÄùôâùôê „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüì¶ ‚û∫ ùòºùôãùôÜ
‚ïëüì• ‚û∫ ùôÅùòºùòæùôÄùòΩùôäùôäùôÜ 
‚ïëüìÇ ‚û∫ ùôàùôÄùòøùôÑùòºùôÅùôÑùôçùôÄ  
‚ïëüìå ‚û∫ ùôãùôÑùôâùôèùôÄùôçùôÄùôéùôè
‚ïëüíæ ‚û∫ ùôÇùôÑùôèùòæùôáùôäùôâùôÄ 
‚ïëüöÄ ‚û∫ ùôÇùòøùôçùôÑùôëùôÄ 
‚ïëüì∏ ‚û∫ ùôÑùôâùôéùôèùòº 
‚ïëüéµ ‚û∫ ùôîùôèùôàùôãùüØ 
‚ïëüé• ‚û∫ ùôîùôèùôàùôãùü∞ 
‚ïëüîç ‚û∫ ùôãùôáùòºùôî 
‚ïëüé∂ ‚û∫ ùôéùôäùôâùôÇ 
‚ïëüìπ ‚û∫ ùôëùôÑùòøùôÄùôä 
‚ïëüìÑ ‚û∫ ùôîùôèùôàùôãùüØùòøùôäùòæ 
‚ïëüìÅ ‚û∫ ùôîùôèùôàùôãùü∞ùòøùôäùòæ 
‚ïëüé¨ ‚û∫ ùôèùôÑùôÜùôèùôäùôÜ 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùòæùôäùôâùôëùôÄùôçùôèùôÄùôç ùôàùôÄùôâùôê „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïë‚ú® ‚û∫ ùòºùôèùôèùôã 
‚ïëüé® ‚û∫ ùòºùôèùôèùôãùüÆ 
‚ïëüí´ ‚û∫ ùòºùôèùôèùôãùüØ 
‚ïëüî¢ ‚û∫ ùôÄùòΩùôÑùôâùòºùôçùôî 
‚ïëüî£ ‚û∫ ùòøùòΩùôÑùôâùòºùôçùôî 
‚ïëüé≠ ‚û∫ ùôÄùôàùôäùôÖùôÑùôàùôÑùôì 
‚ïëüé∂ ‚û∫ ùôàùôãùüØ 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùòºùôçùôèùôÑùôÅùôÑùòæùôÑùòºùôá ùôÑùôâùôèùôÄùôáùôáùôÑùôÇùôÄùôâùòæùôÄ „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüß† ‚û∫ ùòºùôÑ 
‚ïëüõ†Ô∏è ‚û∫ ùòΩùôêùôÇ 
‚ïëüìù ‚û∫ ùôçùôÄùôãùôäùôçùôè 
‚ïëü§ñ ‚û∫ ùôÇùôãùôè 
‚ïëüé® ‚û∫ ùòøùòºùôáùôáùôÄ 
‚ïë‚ú® ‚û∫ ùôçùôÄùôàùôÑùôâùôÑ 
‚ïëüíé ‚û∫ ùôÇùôÄùôàùôÑùôâùôÑ 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùôèùôäùôäùôáùôé ùôàùôÄùôâùôê „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüßÆ ‚û∫ ùòæùòºùôáùòæùôêùôáùòºùôèùôäùôç 
‚ïëüìß ‚û∫ ùôèùôÄùôàùôãùôàùòºùôÑùôá 
‚ïëüì® ‚û∫ ùòæùôÉùôÄùòæùôÜùôàùòºùôÑùôá 
‚ïëüåê ‚û∫ ùôèùôçùôè 
‚ïëüîä ‚û∫ ùôèùôèùôé 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùôÇùôçùôäùôêùôã ùôàùòºùôâùòºùôÇùôÄùôàùôÄùôâùôè „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüîó ‚û∫ ùôáùôÑùôâùôÜùôÇùòæ 
‚ïëüñºÔ∏è ‚û∫ ùôéùôÄùôèùôãùôãùôÇùòæ 
‚ïëüìõ ‚û∫ ùôéùôÄùôèùôâùòºùôàùôÄ 
‚ïëüìù ‚û∫ ùôéùôÄùôèùòøùôÄùôéùòæ 
‚ïëüë• ‚û∫ ùôÇùôçùôäùôêùôã 
‚ïë‚öôÔ∏è ‚û∫ ùôÇùòæùôéùôÄùôèùôèùôÑùôâùôÇ 
‚ïëüéâ ‚û∫ ùôíùôÄùôáùòæùôäùôàùôÄ 
‚ïë‚ûï ‚û∫ ùòºùòøùòø 
‚ïëüö´ ‚û∫ ùôÜùôÑùòæùôÜ 
‚ïëüí• ‚û∫ ùôÜùôÑùòæùôÜùòºùôáùôá 
‚ïëüëë ‚û∫ ùôãùôçùôäùôàùôäùôèùôÄ 
‚ïëüåü ‚û∫ ùôãùôçùôäùôàùôäùôèùôÄùòºùôáùôá 
‚ïë‚¨áÔ∏è ‚û∫ ùòøùôÄùôàùôäùôèùôÄ 
‚ïëüîª ‚û∫ ùòøùôÄùôàùôäùôèùôÄùòºùôáùôá 
‚ïëüëª ‚û∫ ùôÉùôÑùòøùôÄùôèùòºùôÇ 
‚ïëüè∑Ô∏è ‚û∫ ùôèùòºùôÇùòºùôáùôá 
‚ïëüõ°Ô∏è ‚û∫ ùòºùôâùôèùôÑùôáùôÑùôâùôÜ 
‚ïë‚ö†Ô∏è ‚û∫ ùòºùôâùôèùôÑùôèùôäùôìùôÑùòæ 
‚ïëüë§ ‚û∫ ùôÇùôÄùôèùòΩùôÑùôä 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùôéùôÄùòºùôçùòæùôÉ ùôÄùôâùôÇùôÑùôâùôÄùôé „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüéµ ‚û∫ ùôãùôáùòºùôî 
‚ïëüì∫ ‚û∫ ùôîùôèùôé 
‚ïëüé¨ ‚û∫ ùôÑùôàùòøùòΩ 
‚ïëüåê ‚û∫ ùôÇùôäùôäùôÇùôáùôÄ 
‚ïëüñºÔ∏è ‚û∫ ùôÇùôÑùôàùòºùôÇùôÄ 
‚ïëüìå ‚û∫ ùôãùôÑùôâùôèùôÄùôçùôÄùôéùôè 
‚ïëüé® ‚û∫ ùôíùòºùôáùôáùôãùòºùôãùôÄùôç 
‚ïëüìö ‚û∫ ùôíùôÑùôÜùôÑùôàùôÄùòøùôÑùòº 
‚ïëüîé ‚û∫ ùôîùôèùôéùôÄùòºùôçùòæùôÉ 
‚ïëüîî ‚û∫ ùôçùôÑùôâùôÇùôèùôäùôâùôÄ 
‚ïëüìù ‚û∫ ùôáùôîùôçùôÑùòæùôé 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ‚ö° ùôàùòºùôÑùôâ ùôàùôÄùôâùôê „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüèì ‚û∫ ùôãùôÑùôâùôÇ ¬ª 
‚ïëüí° ‚û∫ ùòºùôáùôÑùôëùôÄ 
‚ïëüëë ‚û∫ ùôäùôíùôâùôÄùôç 
‚ïëüìú ‚û∫ ùôàùôÄùôâùôê 
‚ïëüìä ‚û∫ ùôÑùôâùôÅùôäùòΩùôäùôè 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùòΩùôäùôè ùòæùôäùôâùôèùôçùôäùôáùôé „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüö™ ‚û∫ ùôÖùôäùôÑùôâ 
‚ïëüèÉ ‚û∫ ùôáùôÄùòºùôëùôÄ 
‚ïëüö´ ‚û∫ ùòΩùôáùôäùòæùôÜ 
‚ïë‚úÖ ‚û∫ ùôêùôâùòΩùôáùôäùòæùôÜ 
‚ïëüñºÔ∏è ‚û∫ ùôéùôÄùôèùôãùôãùòΩùôäùôè 
‚ïëüìµ ‚û∫ ùòºùôâùôèùôÑùòæùòºùôáùôá 
‚ïëüìù ‚û∫ ùôéùôÄùôèùôéùôèùòºùôèùôêùôé 
‚ïëüî§ ‚û∫ ùôéùôÄùôèùôâùòºùôàùôÄùòΩùôäùôè 
‚ïë‚å®Ô∏è ‚û∫ ùòºùôêùôèùôäùôèùôîùôãùôÑùôâùôÇ 
‚ïëüåê ‚û∫ ùòºùôáùôíùòºùôîùôéùôäùôâùôáùôÑùôâùôÄ 
‚ïëüëÅÔ∏è ‚û∫ ùòºùôêùôèùôäùôçùôÄùòºùòø 
‚ïëüì§ ‚û∫ ùòºùôêùôèùôäùôéùôëùôÑùôÄùôí 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞

‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
‚ïî‚ïê‚ïê‚ïê‚ú™„Äò ùôéùôèùòºùôáùôÜ ùôàùôÄùôâùôê „Äô‚ú™‚ïê‚ïê‚ä∑‚ùç
‚ïëüì± ‚û∫ ùôèùôçùôêùôÄùòæùòºùôáùôáùôÄùôç 
‚ïëüì∏ ‚û∫ ùôÑùôâùôéùôèùòºùôéùôèùòºùôáùôÜ 
‚ïëüíª ‚û∫ ùôÇùôÑùôèùôÉùôêùòΩùôéùôèùòºùôáùôÜ 
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ä∑‚ùç
‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞‚ñ∞
> *${config.DESCRIPTION}*`;

    // Check if MENU_IMAGE exists in config and is not empty
    let menuImage;
    if (config.MENU_IMAGE && config.MENU_IMAGE.trim() !== '') {
      try {
        // Try to fetch the image from URL
        const response = await axios.get(config.MENU_IMAGE, { responseType: 'arraybuffer' });
        menuImage = Buffer.from(response.data, 'binary');
      } catch (error) {
        console.error('Error fetching menu image from URL, falling back to local image:', error);
        menuImage = fs.readFileSync('https://files.catbox.moe/zzne7x.jpeg');
      }
    } else {
      // Use local image if MENU_IMAGE is not configured
      menuImage = fs.readFileSync('https://files.catbox.moe/zzne7x.jpeg');
    }

    await Matrix.sendMessage(m.from, {
      image: menuImage,
      caption: str,
      contextInfo: {
        mentionedJid: [m.sender],
        forwardingScore: 999,
        isForwarded: true,
        forwardedNewsletterMessageInfo: {
          newsletterJid: '120363397722863547@newsletter',
          newsletterName: "DARK-GAMER",
          serverMessageId: 143
        }
      }
    }, {
      quoted: m
    });

    // Send audio after sending the menu
    await Matrix.sendMessage(m.from, {
      audio: { url: 'https://files.catbox.moe/aklxep.mp3' },
      mimetype: 'audio/mp4',
      ptt: true
    }, { quoted: m });
  }
};

export default menu;
